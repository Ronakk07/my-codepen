{"version":3,"sources":["components/Playground.js","components/App.js","index.js"],"names":["Playground","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExchangeAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","keyMap","matchBrackets","autoCloseBrackets","autoCloseTags","smartIndent","extraKeys","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeOut","setTimeout","clearTimeout","title","sandbox","frameBorder","height","width","ReactDOM","render","StrictMode","onBeforeunload","document","getElementById"],"mappings":"kUAsBe,SAASA,EAAT,GAAiE,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAAY,EACrDC,oBAAS,GAD4C,mBACtEC,EADsE,KAChEC,EADgE,KAO7E,OACE,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC9C,yBAAKE,UAAU,gBACZP,EACD,4BACEQ,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAACI,GAAD,OAAeA,OAEtC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAGlD,kBAAC,aAAD,CACEC,eAjBN,SAA4BC,EAAQC,EAAMd,GACxCC,EAASD,IAiBLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMnB,EACNoB,MAAO,aACPC,aAAa,EACbC,OAAQ,UACRC,eAAe,EACfC,mBAAmB,EACnBC,eAAe,EACfC,aAAa,EACbC,UAAW,CACP,aAAc,oBCkBbC,MArEf,WAAgB,IAAD,EAEWzB,mBAAS,IAFpB,mBAEN0B,EAFM,KAEAC,EAFA,OAGS3B,mBAAS,IAHlB,mBAGN4B,EAHM,KAGDC,EAHC,OAIO7B,mBAAS,IAJhB,mBAIN8B,EAJM,KAIFC,EAJE,OAKe/B,mBAAS,IALxB,mBAKNgC,EALM,KAKEC,EALF,KAqBb,OAdAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAU,2BAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,kCAOR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACT,EAAME,EAAKE,IAIb,oCACE,yBAAK3B,UAAU,2BACb,kBAACR,EAAD,CACEE,SAAS,MACTD,YAAY,OACZE,MAAO4B,EACP3B,SAAU4B,IAEZ,kBAAChC,EAAD,CACEE,SAAS,MACTD,YAAY,MACZE,MAAO8B,EACP7B,SAAU8B,IAEZ,kBAAClC,EAAD,CACEE,SAAS,aACTD,YAAY,KACZE,MAAOgC,EACP/B,SAAUgC,KAGd,yBAAK5B,UAAU,aACb,4BACE6B,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,OAAO,OACPC,MAAM,Y,QClDhBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CACEC,eAAgB,iBAAM,0CAEtB,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1ea67124.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/the-matrix.css\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/hint/javascript-hint';\nimport 'codemirror/addon/hint/show-hint.css';\n// import 'codemirror/addon/hint/html-hint';\n// import 'codemirror/addon/hint/xml-hint';\nimport 'codemirror/addon/hint/anyword-hint';\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled } from \"react-codemirror2\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCompressAlt,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Playground({ displayName, language, value, onChange }) {\n  const [open, setOpen] = useState(true);\n\n  function valueChangeHandler(editor, data, value) {\n    onChange(value);\n  }\n\n  return (\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExchangeAlt} />\n        </button>\n      </div>\n      <Controlled\n        onBeforeChange={valueChangeHandler}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: \"the-matrix\",\n          lineNumbers: true,\n          keyMap: \"sublime\",\n          matchBrackets: true,\n          autoCloseBrackets: true,\n          autoCloseTags: true,\n          smartIndent: true,\n          extraKeys: {\n              'Ctrl-Space': 'autocomplete'\n          }\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Playground from \"./Playground\";\n\n// var allowPrompt = true;\n// let areYouSure = true;\n\nfunction App() {\n  \n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [js, setJs] = useState(\"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      setSrcDoc(\n        `<html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>`\n      );\n    }, 500);\n    return () => clearTimeout(timeOut);\n  }, [html, css, js]);\n\n\n  return (\n    <>\n      <div className=\"container top-container\">\n        <Playground\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Playground\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Playground\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"container\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          height=\"100%\"\n          width=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\n// function leaveSite() {\n//   if (allowPrompt) {\n//     if (!areYouSure && true) {\n//       areYouSure = true;\n//       let confirmMsg = \"Are you really sure you want to leave site ?\";\n//       return confirmMsg;\n//     }\n//   } else {\n//     allowPrompt = true;\n//   }\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Beforeunload } from \"react-beforeunload\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Beforeunload\n      onBeforeunload={() => \"Are you sure you want to leave site ?\"}\n    >\n      <App />\n    </Beforeunload>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}